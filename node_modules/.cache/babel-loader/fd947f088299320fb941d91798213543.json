{"ast":null,"code":"var _jsxFileName = \"/Users/hritik/Desktop/Parklane-master/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport { useAppContext } from '../../AppContext';\nimport LoadingSpinner from '../Layout/LoadingSpinner';\nimport Alert from '../Layout/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  const {\n    isLogin,\n    loginHandler,\n    emailHandler\n  } = useAppContext();\n\n  const showAlert = (show = false, type = '', message = '') => {\n    setAlert({\n      show,\n      type,\n      message\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // validation\n\n    if (!enteredEmail.endsWith('.com') && !enteredEmail.endsWith('.net') && !enteredEmail.endsWith('.org')) {\n      showAlert(true, 'danger', 'Invalid Email');\n      return;\n    }\n\n    if ((enteredPassword.includes(' ') || enteredPassword.length < 8) && !isLogin) {\n      showAlert(true, 'danger', 'Password atleast 8 chars long');\n      return;\n    } // after validation\n\n\n    let url;\n    setIsLoading(true);\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\n    }\n\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setIsLoading(false);\n    const data = await response.json();\n\n    if (!response.ok) {\n      let errorMessage = 'Authentication failed!';\n\n      if (data && data.error && data.error.message) {\n        errorMessage = data.error.message;\n        const regex = /_/g;\n        errorMessage = errorMessage.replace(regex, ' ');\n      }\n\n      showAlert(true, 'danger', errorMessage);\n    } else {\n      if (!isLogin) {\n        showAlert(true, 'success', 'Successfully Signed Up');\n        setTimeout(() => {\n          history.goBack();\n        }, 2000);\n      } else {\n        showAlert(true, 'success', 'Welcome');\n        const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n        loginHandler(data.idToken, expirationTime.toISOString());\n        emailHandler(data.email);\n        history.replace('/');\n        setTimeout(() => {\n          history.go(0);\n        }, 400);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, { ...alert,\n      removeAlert: showAlert,\n      change: {\n        isLoading\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputs,\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.inputs,\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"BBc25yUFikGWoeP9GWEjloHOr6c=\", false, function () {\n  return [useHistory, useAppContext];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/hritik/Desktop/Parklane-master/src/components/Auth/AuthForm.js"],"names":["useRef","useState","useHistory","classes","useAppContext","LoadingSpinner","Alert","AuthForm","emailInputRef","passwordInputRef","history","isLoading","setIsLoading","alert","setAlert","show","message","type","isLogin","loginHandler","emailHandler","showAlert","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","endsWith","includes","length","url","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","json","ok","errorMessage","error","regex","replace","setTimeout","goBack","expirationTime","Date","getTime","expiresIn","idToken","toISOString","go","auth","control","inputs","actions"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport {useAppContext} from '../../AppContext';\nimport LoadingSpinner from '../Layout/LoadingSpinner';\nimport Alert from '../Layout/Alert';\n\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({show: false, message: '', type: ''});\n\n  const {isLogin, loginHandler, emailHandler} = useAppContext();\n\n  const showAlert = (show = false, type = '', message = '') => {\n    setAlert({\n      show,\n      type,\n      message\n    });\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // validation\n    if ((!enteredEmail.endsWith('.com')) && (!enteredEmail.endsWith('.net')) && (!enteredEmail.endsWith('.org'))) {\n      showAlert(true, 'danger', 'Invalid Email');\n      return;\n    }\n    if ((enteredPassword.includes(' ') || enteredPassword.length < 8) && !isLogin) {\n      showAlert(true, 'danger', 'Password atleast 8 chars long');\n      return;\n    }\n    \n    // after validation\n    let url;\n    setIsLoading(true);\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\n    }\n    else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAtWBTV6j8wvd0Z_A8sBMTi_yyUddvaGU4';\n    }\n\n    const response = await fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    setIsLoading(false);\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      let errorMessage = 'Authentication failed!';\n\n      if (data && data.error && data.error.message) {\n        errorMessage = data.error.message;\n        const regex = /_/g;\n        errorMessage = errorMessage.replace(regex, ' ');\n      }\n      showAlert(true, 'danger', errorMessage);\n    }\n\n    else {\n      if (!isLogin) {\n        showAlert(true, 'success', 'Successfully Signed Up');\n        setTimeout(() => { history.goBack(); }, 2000);\n      }\n      else {\n        showAlert(true, 'success', 'Welcome');\n        const expirationTime = new Date(\n          new Date().getTime() + (+data.expiresIn * 1000)\n        );\n\n        loginHandler(data.idToken, expirationTime.toISOString());\n        emailHandler(data.email);\n\n        history.replace('/');\n        setTimeout(() => { history.go(0); }, 400);\n      }\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n\n      {alert.show && <Alert {...alert} removeAlert = {showAlert} change = {{isLoading}}/>}\n\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n\n      <form onSubmit = {submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input \n            className = {classes.inputs}\n            type='email' \n            id='email' \n            ref = {emailInputRef} \n            required \n          />\n        </div>\n\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input \n            className = {classes.inputs}\n            type='password' \n            id='password' \n            ref = {passwordInputRef} \n            required \n          />\n        </div>\n\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <LoadingSpinner />}\n        </div>\n      </form>\n      \n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}
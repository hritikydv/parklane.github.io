{"ast":null,"code":"var _jsxFileName = \"/Users/hritik/Desktop/Parklane-master/src/AppContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nlet logoutTimer;\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const ContextProvider = props => {\n  _s();\n\n  // Authentication\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const currentEmail = localStorage.getItem('email');\n  const [isLogin, setIsLogin] = useState(null);\n  const [email, setEmail] = useState(currentEmail);\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const emailHandler = email => {\n    setEmail(email);\n    localStorage.setItem('email', email);\n  };\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setEmail(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const switchAuthModeHandler = text => {\n    if (text === 'Log in') {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }; // Displaying places\n\n\n  const [loading, setLoading] = useState(true);\n  const [places, setPlaces] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      setLoading(true);\n      const response = await fetch(`https://parklane-24dk-default-rtdb.firebaseio.com/places.json?auth=${token}`);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedPlaces = [];\n\n      for (const key in data) {\n        loadedPlaces.push({\n          id: key,\n          name: data[key].name,\n          info: data[key].info,\n          price: data[key].price,\n          image: data[key].image\n        });\n      }\n\n      setPlaces(loadedPlaces);\n      setLoading(false);\n    };\n\n    fetchPlaces().catch(error => {\n      console.log(error);\n      setLoading(false);\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isLogin,\n      token,\n      email,\n      loading,\n      places,\n      searchTerm,\n      setSearchTerm,\n      isLoggedIn: userIsLoggedIn,\n      switchAuthModeHandler,\n      loginHandler,\n      logoutHandler,\n      emailHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContextProvider, \"nOIssMhgiuua0unro/8FwVWHrs8=\");\n\n_c = ContextProvider;\nexport const useAppContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/hritik/Desktop/Parklane-master/src/AppContext.js"],"names":["React","useState","useContext","useEffect","useCallback","AppContext","createContext","logoutTimer","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","removeItem","token","duration","ContextProvider","props","tokenData","initialToken","currentEmail","isLogin","setIsLogin","email","setEmail","setToken","userIsLoggedIn","emailHandler","setItem","logoutHandler","clearTimeout","loginHandler","setTimeout","switchAuthModeHandler","text","loading","setLoading","places","setPlaces","searchTerm","setSearchTerm","fetchPlaces","response","fetch","ok","Error","data","json","loadedPlaces","key","push","id","name","info","price","image","catch","error","console","log","isLoggedIn","children","useAppContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react';\n\nconst AppContext = React.createContext();\n\nlet logoutTimer;\n\nconst calculateRemainingTime = (expirationTime) => {\n\tconst currentTime = new Date().getTime();\n\tconst adjExpirationTime = new Date(expirationTime).getTime();\n\n\tconst remainingTime = adjExpirationTime - currentTime;\n\treturn remainingTime;\n};\n\nconst retrieveStoredToken = () => {\n\tconst storedToken = localStorage.getItem('token');\n\tconst storedExpirationDate = localStorage.getItem('expirationTime');\n\n\tconst remainingTime = calculateRemainingTime(storedExpirationDate);\n\n\tif (remainingTime <= 60000) {\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('email');\n\t\tlocalStorage.removeItem('expirationTime');\n\t\treturn null;\n\t}\n\n\treturn {\n\t\ttoken: storedToken,\n\t\tduration: remainingTime\n\t};\n};\n\nexport const ContextProvider = (props) => {\n\t// Authentication\n\tconst tokenData = retrieveStoredToken();\n\tlet initialToken;\n\tif (tokenData) {\n\t\tinitialToken = tokenData.token;\n\t}\n\t\n\tconst currentEmail = localStorage.getItem('email');\n\n\tconst [isLogin, setIsLogin] = useState(null);\n\tconst [email, setEmail] = useState(currentEmail);\n\tconst [token, setToken] = useState(initialToken);\n\tconst userIsLoggedIn = !!token;\n\n\n\tconst emailHandler = (email) => {\n\t\tsetEmail(email);\n\t\tlocalStorage.setItem('email', email);\n\t};\n\n\tconst logoutHandler = useCallback(() => {\n\t\tsetToken(null);\n\t\tsetEmail(null);\n\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('email');\n\t\tlocalStorage.removeItem('expirationTime');\n\n\t\tif (logoutTimer) {\n\t\t\tclearTimeout(logoutTimer);\n\t\t}\n\t}, []);\n\n\tconst loginHandler = (token, expirationTime) => {\n\t\tsetToken(token);\n\n\t\tlocalStorage.setItem('token', token);\n\t\tlocalStorage.setItem('expirationTime', expirationTime);\n\n\t\tconst remainingTime = calculateRemainingTime(expirationTime);\n\n\t\tlogoutTimer = setTimeout(logoutHandler, remainingTime);\n\t};\n\n\n\tuseEffect(() => {\n\t\tif (tokenData) {\n\t\t\tlogoutTimer = setTimeout(logoutHandler, tokenData.duration);\n\t\t}\n\t}, [tokenData, logoutHandler]);\n\n\n\tconst switchAuthModeHandler = (text) => {\n\t\tif (text === 'Log in') {\n\t\t\tsetIsLogin(true);\n\t\t}\n\t\telse {\n\t\t\tsetIsLogin(false);\n\t\t}\n\t};\n\n\t// Displaying places\n\tconst [loading, setLoading] = useState(true);\n\tconst [places, setPlaces] = useState([]);\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchPlaces = async () => {\n\t\t\tsetLoading(true);\n\t\t\tconst response = await fetch(`https://parklane-24dk-default-rtdb.firebaseio.com/places.json?auth=${token}`);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Something went wrong!');\n\t\t\t}\n\t\t\t\n\t\t\tconst data = await response.json();\n\t\t\tconst loadedPlaces = [];\n\n\t\t\tfor (const key in data) {\n\t\t\t\tloadedPlaces.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\tname: data[key].name,\n\t\t\t\t\tinfo: data[key].info,\n\t\t\t\t\tprice: data[key].price,\n\t\t\t\t\timage: data[key].image\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetPlaces(loadedPlaces);\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tfetchPlaces().catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tsetLoading(false);\n\t\t});\n\t}, [token]);\n\n\treturn (\n\t\t<AppContext.Provider value = {{\n\t\t\tisLogin,\n\t\t\ttoken,\n\t\t\temail, \n\t\t\tloading, \n\t\t\tplaces,\n\t\t\tsearchTerm,\n\t\t\tsetSearchTerm,\n\t\t\tisLoggedIn: userIsLoggedIn,\n\t\t\tswitchAuthModeHandler,\n\t\t\tloginHandler,\n\t\t\tlogoutHandler,\n\t\t\temailHandler\n\t\t}}>\n\t\t\t{props.children}\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport const useAppContext = () => {\n\treturn useContext(AppContext);\n};\n\n"]},"metadata":{},"sourceType":"module"}
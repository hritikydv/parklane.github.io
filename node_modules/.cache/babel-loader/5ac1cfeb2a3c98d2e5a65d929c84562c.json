{"ast":null,"code":"var _jsxFileName = \"/Users/hritik/Desktop/Parklane-master/src/components/Layout/Places/PlacesList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classes from './PlacesList.module.css';\nimport Loader from '../Loader.js';\nimport Footer from '../Footer.js';\nimport PlaceItem from './PlaceItem';\nimport SearchForm from '../SearchForm';\nimport { useAppContext } from '../../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlacesList = () => {\n  _s();\n\n  const {\n    loading,\n    places,\n    searchTerm\n  } = useAppContext();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  }\n\n  let searchedPlaces = [];\n  searchedPlaces = places.filter(item => {\n    return searchTerm === '' || item.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.heading,\n      children: \"Our presence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), searchedPlaces.length < 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.nothing,\n      children: \"No Places matched your search criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }, this), searchedPlaces.length >= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['places-center'],\n      children: searchedPlaces.map(item => {\n        return /*#__PURE__*/_jsxDEV(PlaceItem, { ...item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PlacesList, \"ybCXqBjtl0RGYx4jdlp+W3oEKac=\", false, function () {\n  return [useAppContext];\n});\n\n_c = PlacesList;\nexport default PlacesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesList\");","map":{"version":3,"sources":["/Users/hritik/Desktop/Parklane-master/src/components/Layout/Places/PlacesList.js"],"names":["React","classes","Loader","Footer","PlaceItem","SearchForm","useAppContext","PlacesList","loading","places","searchTerm","searchedPlaces","filter","item","name","toLowerCase","includes","heading","length","nothing","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAAgCJ,aAAa,EAAnD;;AAEA,MAAIE,OAAJ,EAAa;AACZ,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,MAAIG,cAAc,GAAG,EAArB;AACAA,EAAAA,cAAc,GAAGF,MAAM,CAACG,MAAP,CAAeC,IAAD,IAAU;AACxC,WAAQH,UAAU,KAAK,EAAhB,IAAwBG,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCN,UAAU,CAACK,WAAX,EAAjC,CAA/B;AACA,GAFgB,CAAjB;AAIA,sBACC;AAAA,4BACC;AAAI,MAAA,SAAS,EAAId,OAAO,CAACgB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHD,EAKGN,cAAc,CAACO,MAAf,GAAwB,CAAzB,iBAA+B;AAAI,MAAA,SAAS,EAAIjB,OAAO,CAACkB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALjC,EAOGR,cAAc,CAACO,MAAf,IAAyB,CAA1B,iBAAgC;AAAK,MAAA,SAAS,EAAIjB,OAAO,CAAC,eAAD,CAAzB;AAAA,gBAC9BU,cAAc,CAACS,GAAf,CAAoBP,IAAD,IAAU;AAC7B,4BAAO,QAAC,SAAD,OAA+BA;AAA/B,WAAkBA,IAAI,CAACQ,EAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA;AAD8B;AAAA;AAAA;AAAA;AAAA,YAPlC,eAaC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAbD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA7BD;;GAAMd,U;UACiCD,a;;;KADjCC,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport classes from './PlacesList.module.css';\nimport Loader from '../Loader.js';\nimport Footer from '../Footer.js';\nimport PlaceItem from './PlaceItem';\nimport SearchForm from '../SearchForm';\nimport { useAppContext } from '../../../AppContext';\n\n\nconst PlacesList = () => {\n\tconst {loading, places, searchTerm} = useAppContext();\n\n\tif (loading) {\n\t\treturn <Loader />\n\t}\n\n\tlet searchedPlaces = [];\n\tsearchedPlaces = places.filter((item) => {\n\t\treturn (searchTerm === '') || (item.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className = {classes.heading}>Our presence</h2>\n\n\t\t\t<SearchForm />\n\n\t\t\t{(searchedPlaces.length < 1) && <h3 className = {classes.nothing}>No Places matched your search criteria</h3>}\n\n\t\t\t{(searchedPlaces.length >= 1) && <div className = {classes['places-center']}>\n\t\t\t\t\t{searchedPlaces.map((item) => {\n\t\t\t\t\t\treturn <PlaceItem key = {item.id} {...item} />\n\t\t\t\t\t})}\n\t\t\t\t</div>}\n\t\t\t\t\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default PlacesList;"]},"metadata":{},"sourceType":"module"}
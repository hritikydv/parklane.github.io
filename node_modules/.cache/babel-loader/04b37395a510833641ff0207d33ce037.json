{"ast":null,"code":"var _jsxFileName = \"/Users/hritik/Desktop/Parklane-master/src/components/Profile/Bookings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar2 from '../Layout/Navbar2';\nimport Footer from '../Layout/Footer';\nimport Loader from '../Layout/Loader';\nimport classes from './Bookings.module.css';\nimport { useAppContext } from '../../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bookings = () => {\n  _s();\n\n  const {\n    email,\n    setSearchTerm,\n    token\n  } = useAppContext();\n  const [bookings, setBookings] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const currentDate = new Date();\n  useEffect(() => {\n    setSearchTerm('');\n  }, []);\n  let mailId = email;\n  mailId = mailId.replace(/\\./g, \"-\");\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const response = await fetch(`https://parklane-24dk-default-rtdb.firebaseio.com/bookings/${mailId}.json?auth=${token}`);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const loadedBookings = [];\n      const loadedExpiredBookings = [];\n\n      for (const key in data) {\n        if (currentDate > new Date(data[key].user.timeSlot[1])) {\n          loadedExpiredBookings.push({\n            ticketId: data[key].user.id,\n            license: data[key].user.license,\n            place: data[key].user.place,\n            entryTime: data[key].user.timeSlot[0],\n            exitTime: data[key].user.timeSlot[1]\n          });\n        } else {\n          loadedBookings.push({\n            ticketId: data[key].user.id,\n            license: data[key].user.license,\n            place: data[key].user.place,\n            entryTime: data[key].user.timeSlot[0],\n            exitTime: data[key].user.timeSlot[1]\n          });\n        }\n      }\n\n      loadedExpiredBookings.sort((a, b) => new Date(a.exitTime) - new Date(b.exitTime));\n      loadedExpiredBookings.reverse();\n      loadedBookings.reverse();\n      const finalBookings = loadedBookings.concat(loadedExpiredBookings);\n      setBookings(finalBookings);\n      setIsLoading(false);\n    };\n\n    fetchBookings().catch(error => {\n      setHttpError(error.message);\n      setIsLoading(false);\n    });\n  }, [mailId, token]);\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.BookingsError,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: httpError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.heading,\n      children: \"Your Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 18\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes[\"responsive-table\"],\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes[\"table-header\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.col} ${classes[\"col-1\"]}`,\n            children: \"Ticket ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.col} ${classes[\"col-1\"]}`,\n            children: \"License Plate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.col} ${classes[\"col-1\"]}`,\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.col} ${classes[\"col-1\"]}`,\n            children: \"Entry Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.col} ${classes[\"col-1\"]}`,\n            children: \"Exit Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), bookings.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classes[\"table-row\"],\n            children: [currentDate > new Date(item.exitTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"Ticket ID\",\n              children: [item.ticketId, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.expired,\n                children: \"Expired\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), currentDate <= new Date(item.exitTime) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"Ticket ID\",\n              children: item.ticketId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"License Plate\",\n              children: item.license\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"Place\",\n              children: item.place\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"Entry Time\",\n              children: item.entryTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.col} ${classes[\"col-1\"]}`,\n              \"data-label\": \"Exit Time\",\n              children: item.exitTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 8\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.note,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"* There is no need to print anything out! All your bookings are here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"* Modern Parking lots are equipped with Automatic License Plate Recognition (ALPR).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 20\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Bookings, \"ImTW8sFtWQrdDz5SWS3hyAdvNFQ=\", false, function () {\n  return [useAppContext];\n});\n\n_c = Bookings;\nexport default Bookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"sources":["/Users/hritik/Desktop/Parklane-master/src/components/Profile/Bookings.js"],"names":["React","useState","useEffect","Navbar2","Footer","Loader","classes","useAppContext","Bookings","email","setSearchTerm","token","bookings","setBookings","isLoading","setIsLoading","httpError","setHttpError","currentDate","Date","mailId","replace","fetchBookings","response","fetch","ok","Error","data","json","loadedBookings","loadedExpiredBookings","key","user","timeSlot","push","ticketId","id","license","place","entryTime","exitTime","sort","a","b","reverse","finalBookings","concat","catch","error","message","BookingsError","heading","container","col","map","item","i","expired","note"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Navbar2 from '../Layout/Navbar2';\nimport Footer from '../Layout/Footer';\nimport Loader from '../Layout/Loader';\nimport classes from './Bookings.module.css';\nimport { useAppContext } from '../../AppContext';\n\nconst Bookings = () => {\n\tconst {email, setSearchTerm, token} = useAppContext();\n\tconst [bookings, setBookings] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [httpError, setHttpError] = useState();\n\n\tconst currentDate = new Date();\n\n\tuseEffect(() => {\n\t  setSearchTerm('');\n\t}, []);\n\n\tlet mailId = email;\n\tmailId = mailId.replace(/\\./g, \"-\");\n\n\tuseEffect(() => {\n\t\tconst fetchBookings = async () => {\t\t\n\t\t\tconst response = await fetch(`https://parklane-24dk-default-rtdb.firebaseio.com/bookings/${mailId}.json?auth=${token}`);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Something went wrong!');\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\t\t\tconst loadedBookings = [];\n\t\t\tconst loadedExpiredBookings = [];\n\n\t\t\tfor (const key in data) {\n\t\t\t\tif (currentDate > new Date(data[key].user.timeSlot[1])) {\n\t\t\t\t\tloadedExpiredBookings.push({\n\t\t\t\t\t\tticketId: data[key].user.id,\n\t\t\t\t\t\tlicense: data[key].user.license,\n\t\t\t\t\t\tplace: data[key].user.place,\n\t\t\t\t\t\tentryTime: data[key].user.timeSlot[0],\n\t\t\t\t\t\texitTime: data[key].user.timeSlot[1]\n\t\t\t\t\t});\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tloadedBookings.push({\n\t\t\t\t\t\tticketId: data[key].user.id,\n\t\t\t\t\t\tlicense: data[key].user.license,\n\t\t\t\t\t\tplace: data[key].user.place,\n\t\t\t\t\t\tentryTime: data[key].user.timeSlot[0],\n\t\t\t\t\t\texitTime: data[key].user.timeSlot[1]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadedExpiredBookings.sort((a, b) => new Date(a.exitTime) - new Date(b.exitTime));\n\t\t\tloadedExpiredBookings.reverse();\n\t\t\tloadedBookings.reverse();\n\t\t\tconst finalBookings = loadedBookings.concat(loadedExpiredBookings);\n\n\t\t\tsetBookings(finalBookings);\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\t\n\t\tfetchBookings().catch(error => {\n\t\t\tsetHttpError(error.message);\n\t\t\tsetIsLoading(false);\n\t\t});\t\t\n\t}, [mailId, token]);\n\n\tif(httpError) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar2 />\n\t\t\t\t<section className = {classes.BookingsError}>\n\t\t\t\t\t<p>{httpError}</p>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navbar2 />\n\t\t\t<h2 className = {classes.heading}>Your Bookings</h2>\n\n\t\t\t{isLoading && <Loader />}\n\n\t\t\t{!isLoading && (<div className = {classes.container}>\n\t\t\t\t<ul className = {classes[\"responsive-table\"]}>\n\t\t\t\t\t<li className = {classes[\"table-header\"]}>\n\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`}>Ticket ID</div>\n\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`}>License Plate</div>\n\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`}>Place</div>\n\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`}>Entry Time</div>\n\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`}>Exit Time</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t\n\t\t\t\t\t{bookings.map((item, i) => {\n\t\t\t\t\t\treturn <li className = {classes[\"table-row\"]} key = {i}>\n\t\t\t\t\t\t\t{(currentDate > (new Date(item.exitTime))) && \n\t\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"Ticket ID\">\n\t\t\t\t\t\t\t\t\t{item.ticketId} <span className = {classes.expired}>Expired</span>\n\t\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t{(currentDate <= (new Date(item.exitTime))) && \n\t\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"Ticket ID\">{item.ticketId}</div>}\n\n\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"License Plate\">{item.license}</div>\n\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"Place\">{item.place}</div>\n\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"Entry Time\">{item.entryTime}</div>\n\t\t\t\t\t\t\t<div className = {`${classes.col} ${classes[\"col-1\"]}`} data-label = \"Exit Time\">{item.exitTime}</div>\n\t\t\t\t\t\t</li>})\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</div>)}\n\n\t\t\t{!isLoading && (<div className = {classes.note}>\n\t\t\t\t<div>* There is no need to print anything out! All your bookings are here.</div>\n\t\t\t\t<div>* Modern Parking lots are equipped with Automatic License Plate Recognition (ALPR).</div>\n\t\t\t</div>)}\n\n\t\t\t{!isLoading && (<Footer />)}\n\t\t\t\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Bookings;"]},"metadata":{},"sourceType":"module"}